#include <iostream>
#include <string>
#include <vector>

using namespace std; 

int main()
{
	int q;
	cin >> q;
    vector<int> odhe;
	for (int i = 0; i < q; ++i)
    {
		string operation_code;
		cin >> operation_code;
        int w;
		if (operation_code == "WORRY_COUNT"s)
        {
            int k = 0;
            for (int j = 0; j < odhe.size(); j++)
            {
                if (odhe[j] == 1)
                    k++;
		    }		// обработка запроса WORRY_COUNT
            cout << k << endl;
        }
        else
        {
            cin >> w;
            if (operation_code == "COME"s)
            {
                int g = odhe.size() + w;
                odhe.resize(g);
            }
            else if (operation_code == "WORRY"s)
                odhe[w] = 1;
            else
                odhe[w] = 0;   // обработка остальных запросов
        }
	}
    return (0);
}
//Люди стоят в очереди, но никогда не уходят из её начала, зато могут приходить в конец и уходить оттуда. Также некоторые могут начинать и прекращать беспокоиться из-за того, что очередь не продвигается.
//Реализуйте обработку следующих операций над очередью:
//WORRY i: пометить i-го человека с начала очереди (в нумерации с 0) как беспокоящегося;
//QUIET i: пометить i-го человека (в нумерации с 0) как успокоившегося;
//COME k: добавить k спокойных человек в конец очереди;
//COME -k: убрать k человек из конца очереди;
//WORRY_COUNT: узнать количество беспокоящихся людей в очереди.
//Изначально очередь пуста.
//Операции WORRY, QUIET и COME реализуйте с помощью простых действий с вектором. Операцию WORRY_COUNT — с помощью честного подсчёта указанного числа.
//Формат ввода
//На вход программе подаётся количество операций Q, затем описания операций.
//Для каждой операции WORRY i и QUIET i гарантируется, что человек с номером i существует в очереди на момент операции.
//Для каждой операции COME -k гарантируется, что k не больше текущего размера очереди.
//Все указанные гарантии действительно справедливы для всех запросов: проверять их не нужно, просто пишите программу, считая, что входные данные корректны.
//Формат вывода
//Для каждой операции WORRY_COUNT выведите одно целое число — количество беспокоящихся людей в очереди.
//Пример
//Ввод
//8
//COME 5
//WORRY 1
//WORRY 4
//COME -2
//WORRY_COUNT
//COME 3
//WORRY 3
//WORRY_COUNT 
//Вывод
//1
//2